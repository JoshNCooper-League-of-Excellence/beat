import fmt::*;
import lexer::*;
import parser::*;
import interp::*;

#include "builtin.ela";

fn main() {
  mut alloc := Dyn_Allocator::new(&mut Tracking_Allocator.{});
  allocator := &mut alloc;
  *get_default_allocator() = *allocator;

  mut args := Env::args();
  mut path: String;

  if args.length >= 2 {
    path = String::from(args[1]);
  } else {
    printf("too few arguments!\nusage: beat <filename.beat>"c);
    return;
  }

  mut lexer := Lexer::new(allocator, path);
  mut parser := Parser::new();
  mut root := parser.parse(&mut lexer);

  defer {
    allocator.deinit();
    parser.arena.deinit();
  }

  mut interp := Interp.{
    scope: allocator.new_ptr(Scope.{}),
  };
  
  bootstrap_builtin_functions(&mut interp, allocator);

  interp.run(root);

}